# .github/workflows/build-and-release.yml
name: Build and Release Container

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/crypto-price-aggregator

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make scripts executable
      run: chmod +x ./gradlew
    
    - name: Run tests
      run: ./gradlew test -PexcludeIntegrationTests
    
    - name: Build shadowJar
      run: ./gradlew shadowJar
    
    - name: Build container
      run: docker build -t crypto-price-aggregator:distroless .
    
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      if: github.event_name != 'pull_request'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=sha,prefix={{branch}}-
    
    - name: Tag and push container
      if: github.event_name != 'pull_request'
      run: |
        echo '${{ steps.meta.outputs.tags }}' | while read -r tag; do
          if [ -n "$tag" ]; then
            echo "Tagging and pushing: $tag"
            docker tag crypto-price-aggregator:distroless "$tag"
            docker push "$tag"
          fi
        done
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        body: |
          ## Container Images
          
          Pull the container image:
          ```bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          ```
          
          Run with your .env file:
          ```bash
          docker run --env-file .env -p 8080:8080 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          ```
